import{_ as a,o as n,c as e,d as o,a as s,b as p,e as t}from"./app-6a63891c.js";const l={},c=s("h1",{id:"mysql基础-四",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#mysql基础-四","aria-hidden":"true"},"#"),p(" MySQL基础（四）")],-1),r=s("p",null,"MySQL基础笔记系列",-1),k=t(`<h2 id="数学相关" tabindex="-1"><a class="header-anchor" href="#数学相关" aria-hidden="true">#</a> 数学相关</h2><ol><li>向下取整 floor(num)</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> floor<span class="token punctuation">(</span><span class="token number">3.85</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ol start="2"><li>四舍五入 round(num)</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">round</span><span class="token punctuation">(</span><span class="token number">3.8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ol start="3"><li>四舍五入 round(num,m) m代表小数位数</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">round</span><span class="token punctuation">(</span><span class="token number">23.879</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ol start="4"><li>非四舍五入 truncate(num,m) m代表小数位数</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token keyword">truncate</span><span class="token punctuation">(</span><span class="token number">23.879</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ol start="5"><li>随机数 rand()</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 获取3-5 的随机整数</span>
<span class="token keyword">select</span> floor<span class="token punctuation">(</span>rand<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="分组查询-group-by" tabindex="-1"><a class="header-anchor" href="#分组查询-group-by" aria-hidden="true">#</a> 分组查询 group by</h2><div class="language-sql" data-ext="sql"><pre class="language-sql"><code> <span class="token comment"># 格式： group by 自动名;</span>
 <span class="token keyword">select</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">from</span> 表名 <span class="token keyword">where</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">group</span> <span class="token keyword">by</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">limit</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="having" tabindex="-1"><a class="header-anchor" href="#having" aria-hidden="true">#</a> having</h2><ul><li>where 后面写普通字段的条件</li><li>having后面写聚合函数的条件，having需要结合group by使用</li></ul><blockquote><p>各个关键字的顺序：<br> select .... from 表名 where ..... group by .... having ..... order by .... limit ....;</p></blockquote><h2 id="子查询可以写的位置" tabindex="-1"><a class="header-anchor" href="#子查询可以写的位置" aria-hidden="true">#</a> 子查询可以写的位置</h2><ol><li>写在where或having后面 当做查询条件的值</li><li>写在创建表的时候</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> emp_10 <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> deptno<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ol start="3"><li>写在from后面 当成一张虚拟表 <strong>必须有别名</strong></li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> ename <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> deptno<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span> newtable<span class="token punctuation">;</span>
</code></pre></div><h2 id="关联查询" tabindex="-1"><a class="header-anchor" href="#关联查询" aria-hidden="true">#</a> 关联查询</h2><ul><li>同时查询多张表的查询方式称为关联查询</li></ul><blockquote><p>关联查询必须写关联关系，如果不写会得到两张表的乘积，这个乘积称为笛卡尔积，工作中千万不要出现这种情况，这是一个错误的查询结果集</p></blockquote><ol><li>等值连接</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> A<span class="token punctuation">,</span>B <span class="token keyword">where</span> A<span class="token punctuation">.</span>x<span class="token operator">=</span>B<span class="token punctuation">.</span>x <span class="token operator">and</span> A<span class="token punctuation">.</span>age<span class="token operator">&gt;</span><span class="token number">20</span><span class="token punctuation">;</span>
</code></pre></div><ol start="2"><li>内连接</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> A <span class="token keyword">join</span> B <span class="token keyword">on</span> A<span class="token punctuation">.</span>x<span class="token operator">=</span>B<span class="token punctuation">.</span>x <span class="token keyword">where</span> A<span class="token punctuation">.</span>age<span class="token operator">&gt;</span><span class="token number">20</span><span class="token punctuation">;</span>
</code></pre></div><ol start="3"><li>外连接</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> A <span class="token keyword">left</span><span class="token operator">/</span><span class="token keyword">right</span> <span class="token keyword">join</span> B <span class="token keyword">on</span> A<span class="token punctuation">.</span>x<span class="token operator">=</span>B<span class="token punctuation">.</span>x <span class="token keyword">where</span> A<span class="token punctuation">.</span>age<span class="token operator">=</span><span class="token number">20</span> 
</code></pre></div><ol start="4"><li>多表连接</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> 条件 <span class="token keyword">from</span> emp e <span class="token keyword">join</span> emp m <span class="token keyword">on</span> e<span class="token punctuation">.</span>mgr<span class="token operator">=</span>m<span class="token punctuation">.</span>empno <span class="token keyword">join</span> dept d <span class="token keyword">on</span> e<span class="token punctuation">.</span>deptno<span class="token operator">=</span>d<span class="token punctuation">.</span>deptno <span class="token keyword">join</span> xxx <span class="token keyword">on</span> xxx <span class="token keyword">join</span> xxx <span class="token keyword">on</span> xxx<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
</code></pre></div><blockquote><p>总结：如果查询的数据是两张表的交集数据使用内连接，如果查询的数据是一张表的全部和另外一张表的交集使用外连接。</p></blockquote>`,33);function u(i,d){return n(),e("div",null,[c,r,o(" more "),k])}const y=a(l,[["render",u],["__file","1910011303.html.vue"]]);export{y as default};
