const e=JSON.parse('{"key":"v-c5b336ca","path":"/note/java/jvm/2311071055.html","title":"深入理解Synchronized","lang":"zh-CN","frontmatter":{"isOriginal":true,"date":"2023-05-07T00:00:00.000Z","index":true,"category":["Java"],"tag":["JVM","LOCK"]},"headers":[{"level":2,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[{"level":3,"title":"临界资源","slug":"临界资源","link":"#临界资源","children":[]},{"level":3,"title":"Synchronized","slug":"synchronized","link":"#synchronized","children":[]}]},{"level":2,"title":"基本用法","slug":"基本用法","link":"#基本用法","children":[{"level":3,"title":"Synchronized方法","slug":"synchronized方法","link":"#synchronized方法","children":[]},{"level":3,"title":"Synchronized代码块","slug":"synchronized代码块","link":"#synchronized代码块","children":[]}]},{"level":2,"title":"深入理解","slug":"深入理解","link":"#深入理解","children":[{"level":3,"title":"字节码层面的实现","slug":"字节码层面的实现","link":"#字节码层面的实现","children":[]},{"level":3,"title":"Monitor（管程/监视器）机制","slug":"monitor-管程-监视器-机制","link":"#monitor-管程-监视器-机制","children":[]}]}],"git":{"createdTime":1699349485000,"updatedTime":1699349485000,"contributors":[{"name":"yanggl","email":"2549597630@qq.com","commits":1}]},"readingTime":{"minutes":3.3,"words":991},"filePathRelative":"note/java/jvm/2311071055.md","localizedDate":"2023年5月7日","excerpt":"<h1> 深入理解Synchronized</h1>\\n<p><strong>synchronized</strong>关键字是为了处理在Java编程中多线程环境下的数据一致性和安全性的重要问题。<br>\\n<strong>synchronized</strong>关键字可以用于方法或代码块，以确保在同一时刻只有一个线程可以访问被保护的资源（临界资源）。</p>\\n","copyright":{"author":"Yaien","license":"MIT"}}');export{e as data};
