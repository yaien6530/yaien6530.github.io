import{_ as s,o as a,c as t,d as p,a as n,b as o,e}from"./app-8f74759d.js";const c={},i=n("h1",{id:"多边形等距离外扩",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#多边形等距离外扩","aria-hidden":"true"},"#"),o(" 多边形等距离外扩")],-1),l=n("p",null,"实现多边形形成的多边形进行等距外扩或收缩的算法实现",-1),u=e(`<h2 id="涉及技术" tabindex="-1"><a class="header-anchor" href="#涉及技术" aria-hidden="true">#</a> 涉及技术</h2><ul><li>腾讯地图</li><li>jdk1.8</li></ul><h2 id="问题描述" tabindex="-1"><a class="header-anchor" href="#问题描述" aria-hidden="true">#</a> 问题描述</h2><p>开发一款应用，前端在地图上标记经纬度坐标点集合形成一个多边形，现需要在后端将多边形做一个等距外扩或者收缩。</p><p>在网上查了好多的算法，经过尝试验证，在小经度多边形进行收缩外扩都或多或少存在一些问题，因此自己参考写出了</p><p>一个多边形外扩收缩的算法。</p><h2 id="java代码实现" tabindex="-1"><a class="header-anchor" href="#java代码实现" aria-hidden="true">#</a> JAVA代码实现</h2><h3 id="坐标点实体-point" tabindex="-1"><a class="header-anchor" href="#坐标点实体-point" aria-hidden="true">#</a> 坐标点实体（Point）</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 地图上一个点的经纬度
 *
 * <span class="token keyword">@author</span> yanggl
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@date</span> 2022/5/9 15:03
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Point</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">45122365987322547L</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 经度
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Double</span> longitude<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 纬度
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Double</span> latitude<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Double</span> <span class="token function">getLongitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> longitude<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLongitude</span><span class="token punctuation">(</span><span class="token class-name">Double</span> longitude<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>longitude <span class="token operator">=</span> longitude<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Double</span> <span class="token function">getLatitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> latitude<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLatitude</span><span class="token punctuation">(</span><span class="token class-name">Double</span> latitude<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>latitude <span class="token operator">=</span> latitude<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token string">&quot;{&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;longitude=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>longitude<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;, latitude=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>latitude<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token char">&#39;}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="向量工具类-vectorutil" tabindex="-1"><a class="header-anchor" href="#向量工具类-vectorutil" aria-hidden="true">#</a> 向量工具类 (VectorUtil)</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 向量工具类
 *
 * <span class="token keyword">@author</span> yanggl
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@date</span> 2022/7/8 10:29
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VectorUtil</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 向量求模数
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">norm</span><span class="token punctuation">(</span><span class="token class-name">Point</span> point<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span><span class="token function">getLongitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> point<span class="token punctuation">.</span><span class="token function">getLongitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> point<span class="token punctuation">.</span><span class="token function">getLatitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> point<span class="token punctuation">.</span><span class="token function">getLatitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 向量加法
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Point</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Point</span> point1<span class="token punctuation">,</span> <span class="token class-name">Point</span> point2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Point</span> point <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        point<span class="token punctuation">.</span><span class="token function">setLongitude</span><span class="token punctuation">(</span>point1<span class="token punctuation">.</span><span class="token function">getLongitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> point2<span class="token punctuation">.</span><span class="token function">getLongitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        point<span class="token punctuation">.</span><span class="token function">setLatitude</span><span class="token punctuation">(</span>point1<span class="token punctuation">.</span><span class="token function">getLatitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> point2<span class="token punctuation">.</span><span class="token function">getLatitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> point<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 向量减法
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Point</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token class-name">Point</span> point1<span class="token punctuation">,</span> <span class="token class-name">Point</span> point2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Point</span> point <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        point<span class="token punctuation">.</span><span class="token function">setLongitude</span><span class="token punctuation">(</span>point1<span class="token punctuation">.</span><span class="token function">getLongitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> point2<span class="token punctuation">.</span><span class="token function">getLongitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        point<span class="token punctuation">.</span><span class="token function">setLatitude</span><span class="token punctuation">(</span>point1<span class="token punctuation">.</span><span class="token function">getLatitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> point2<span class="token punctuation">.</span><span class="token function">getLatitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> point<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 向量乘法
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Point</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token class-name">Point</span> p<span class="token punctuation">,</span> <span class="token keyword">double</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Point</span> point <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        point<span class="token punctuation">.</span><span class="token function">setLongitude</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getLongitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>
        point<span class="token punctuation">.</span><span class="token function">setLatitude</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getLatitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> point<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 向量叉乘
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">cross</span><span class="token punctuation">(</span><span class="token class-name">Point</span> p1<span class="token punctuation">,</span> <span class="token class-name">Point</span> p2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> p1<span class="token punctuation">.</span><span class="token function">getLongitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> p2<span class="token punctuation">.</span><span class="token function">getLatitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> p1<span class="token punctuation">.</span><span class="token function">getLatitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> p2<span class="token punctuation">.</span><span class="token function">getLongitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="核心工具类-distanceutil" tabindex="-1"><a class="header-anchor" href="#核心工具类-distanceutil" aria-hidden="true">#</a> 核心工具类 (DistanceUtil)</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 工具类
 *
 * <span class="token keyword">@author</span> yanggl
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@date</span> 2022/7/8 10:23
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DistanceUtil</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 操作多边形扩张/收缩
     *
     * <span class="token keyword">@param</span> <span class="token parameter">points</span> 待扩/收缩张多边形
     * <span class="token keyword">@param</span> <span class="token parameter">dist</span>   距离 正数扩张，负数收缩
     * <span class="token keyword">@return</span> 扩张/收缩后的多边形
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Point</span><span class="token punctuation">&gt;</span></span> <span class="token function">expansion</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Point</span><span class="token punctuation">&gt;</span></span> points<span class="token punctuation">,</span> <span class="token keyword">double</span> dist<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>points<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;not enough 3 point&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Point</span><span class="token punctuation">&gt;</span></span> npList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> lngList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> latList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Point</span> point <span class="token operator">:</span> points<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            lngList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span><span class="token function">getLongitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            latList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span><span class="token function">getLatitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Double</span> minLng <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>lngList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Double</span> minLat <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>latList<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Point</span> point <span class="token operator">:</span> points<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Point</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            p<span class="token punctuation">.</span><span class="token function">setLongitude</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span><span class="token function">getLongitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> minLng<span class="token punctuation">)</span><span class="token punctuation">;</span>
            p<span class="token punctuation">.</span><span class="token function">setLatitude</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span><span class="token function">getLatitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> minLat<span class="token punctuation">)</span><span class="token punctuation">;</span>
            npList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Point</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token function">enlarge</span><span class="token punctuation">(</span>npList<span class="token punctuation">,</span> dist<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Point</span><span class="token punctuation">&gt;</span></span> resultList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Point</span> point <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Point</span> np <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            np<span class="token punctuation">.</span><span class="token function">setLongitude</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span><span class="token function">getLongitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> minLng<span class="token punctuation">)</span><span class="token punctuation">;</span>
            np<span class="token punctuation">.</span><span class="token function">setLatitude</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span><span class="token function">getLatitude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> minLat<span class="token punctuation">)</span><span class="token punctuation">;</span>
            resultList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>np<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> resultList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 多边形外扩/收缩
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Point</span><span class="token punctuation">&gt;</span></span> <span class="token function">enlarge</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Point</span><span class="token punctuation">&gt;</span></span> points<span class="token punctuation">,</span> <span class="token keyword">double</span> dist<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Point</span><span class="token punctuation">&gt;</span></span> resultList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> size <span class="token operator">=</span> points<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> angle <span class="token operator">=</span> dist <span class="token operator">*</span> <span class="token function">dmi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        angle <span class="token operator">=</span> <span class="token function">isConvex</span><span class="token punctuation">(</span>points<span class="token punctuation">)</span> <span class="token operator">?</span> angle <span class="token operator">:</span> <span class="token operator">-</span>angle<span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Point</span> pi <span class="token operator">=</span> points<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Point</span> v1 <span class="token operator">=</span> <span class="token class-name">VectorUtil</span><span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>points<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">+</span> size<span class="token punctuation">)</span> <span class="token operator">%</span> size<span class="token punctuation">)</span><span class="token punctuation">,</span> pi<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Point</span> v2 <span class="token operator">=</span> <span class="token class-name">VectorUtil</span><span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>points<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> size<span class="token punctuation">)</span><span class="token punctuation">,</span> pi<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> norm1 <span class="token operator">=</span> <span class="token class-name">VectorUtil</span><span class="token punctuation">.</span><span class="token function">norm</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> norm2 <span class="token operator">=</span> <span class="token class-name">VectorUtil</span><span class="token punctuation">.</span><span class="token function">norm</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>norm1 <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> norm2 <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 剔除重复点（或距离极近的点）</span>
                points<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token function">enlarge</span><span class="token punctuation">(</span>points<span class="token punctuation">,</span> dist<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token class-name">Point</span> normalizeV1 <span class="token operator">=</span> <span class="token class-name">VectorUtil</span><span class="token punctuation">.</span><span class="token function">mul</span><span class="token punctuation">(</span>v1<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">/</span> norm1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Point</span> normalizeV2 <span class="token operator">=</span> <span class="token class-name">VectorUtil</span><span class="token punctuation">.</span><span class="token function">mul</span><span class="token punctuation">(</span>v2<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">/</span> norm2<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> sinTheta <span class="token operator">=</span> <span class="token class-name">VectorUtil</span><span class="token punctuation">.</span><span class="token function">cross</span><span class="token punctuation">(</span>normalizeV1<span class="token punctuation">,</span> normalizeV2<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Point</span> qi <span class="token operator">=</span> <span class="token class-name">VectorUtil</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>pi<span class="token punctuation">,</span> <span class="token class-name">VectorUtil</span><span class="token punctuation">.</span><span class="token function">mul</span><span class="token punctuation">(</span><span class="token class-name">VectorUtil</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>normalizeV1<span class="token punctuation">,</span> normalizeV2<span class="token punctuation">)</span><span class="token punctuation">,</span> angle <span class="token operator">/</span> sinTheta<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            resultList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>qi<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> resultList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 计算1米代表的角度 这里只是近似计算，事实上随着纬度的变化其变动范围将受到影响
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">dmi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">double</span> s <span class="token operator">=</span> <span class="token number">6378.137</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">180</span> <span class="token operator">*</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 判断是否凸多边形
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isConvex</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Point</span><span class="token punctuation">&gt;</span></span> points<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">double</span> area <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token class-name">Point</span> p1 <span class="token operator">=</span> <span class="token class-name">VectorUtil</span><span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>points<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> points<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Point</span> p2<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> points<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            p2 <span class="token operator">=</span> <span class="token class-name">VectorUtil</span><span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>points<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> points<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            area <span class="token operator">+=</span> <span class="token class-name">VectorUtil</span><span class="token punctuation">.</span><span class="token function">cross</span><span class="token punctuation">(</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span>
            p1 <span class="token operator">=</span> p2<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> area <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 多边形周长
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">perimeter</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Point</span><span class="token punctuation">&gt;</span></span> points<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> size <span class="token operator">=</span> points<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> perimeter <span class="token operator">=</span> <span class="token number">0.0d</span><span class="token punctuation">;</span>
        <span class="token class-name">Point</span> point<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            point <span class="token operator">=</span> points<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            perimeter <span class="token operator">+=</span> <span class="token class-name">VectorUtil</span><span class="token punctuation">.</span><span class="token function">norm</span><span class="token punctuation">(</span><span class="token class-name">VectorUtil</span><span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>points<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">+</span> size<span class="token punctuation">)</span> <span class="token operator">%</span> size<span class="token punctuation">)</span><span class="token punctuation">,</span> point<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> perimeter<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>经测试，对于小经度多边形的外扩是能够正常的。</p></blockquote>`,14);function k(d,r){return a(),t("div",null,[i,l,p(" more "),u])}const m=s(c,[["render",k],["__file","2302201400.html.vue"]]);export{m as default};
