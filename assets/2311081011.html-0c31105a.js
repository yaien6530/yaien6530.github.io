import{_ as t,o as a,c as o,d as c,a as e,b as s}from"./app-a62e1212.js";const n={},r=e("h1",{id:"jvm内存模型详解",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#jvm内存模型详解","aria-hidden":"true"},"#"),s(" JVM内存模型详解")],-1),_=e("p",null,"JMM(Java Memory Model)是JVM的一种规范，定义了JVM的内存模型。它屏蔽了各种硬件和操作系统的访问差异，不像c那样直接访问硬件内存，相对安全很多。",-1),d=e("p",null,"它的主要目的是解决由于多线程通过共享内存进行通信时，存在的本地内存数据不一致、编译器会对代码指令重排序、处理器会对代码乱序执行等带来的问题。可以保证并发编程场景中的原子性、可见性和有序性。",-1),l=e("p",null,"JVM内存布局规定了Java在运行过程中内存申请、分配、管理的策略，保证JVM的高效稳定运行。",-1);function i(h,m){return a(),o("div",null,[r,_,c(" more "),d,l])}const M=t(n,[["render",i],["__file","2311081011.html.vue"]]);export{M as default};
