import{_ as n,Q as s,a2 as e,a5 as t,a3 as a,a4 as l,a6 as o}from"./framework-27238c07.js";const p={},c=a("h1",{id:"mysql基础-二",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#mysql基础-二","aria-hidden":"true"},"#"),l(" MySQL基础（二）")],-1),i=a("p",null,"MySQL基础笔记系列",-1),u=o(`<h2 id="主键约束" tabindex="-1"><a class="header-anchor" href="#主键约束" aria-hidden="true">#</a> 主键约束</h2><ul><li>主键：表示数据唯一性的字段称为主键</li><li>约束： 创建表时给表字段添加的限制条件</li><li>主键约束： 限制值唯一且非空</li></ul><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 格式： create table t1(id int primary key,name varchar(10));</span>
insert into t1 values<span class="token punctuation">(</span><span class="token number">1</span>,<span class="token string">&#39;AAA&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
insert into t1 values<span class="token punctuation">(</span><span class="token number">1</span>,<span class="token string">&#39;BBB&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 报错 不能重复</span>
insert into t1 values<span class="token punctuation">(</span>null,<span class="token string">&#39;CCC&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 报错 不能为null</span>
</code></pre></div><h2 id="主键约束-自增" tabindex="-1"><a class="header-anchor" href="#主键约束-自增" aria-hidden="true">#</a> 主键约束+自增</h2><ul><li>从历史最大值基础上+1 ， 自增数值只增不减</li></ul><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 格式： create table t2(id int primary key auto_increment,name varchar(10));</span>
 insert into t2 values<span class="token punctuation">(</span>null,<span class="token string">&#39;aaa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 1</span>
 insert into t2 values<span class="token punctuation">(</span><span class="token number">2</span>,<span class="token string">&#39;bbb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 2</span>
 insert into t2 values<span class="token punctuation">(</span><span class="token number">10</span>,<span class="token string">&#39;ccc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 10</span>
 insert into t2 values<span class="token punctuation">(</span>null,<span class="token string">&#39;ddd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 11</span>
 delete from t2 where id<span class="token operator">&gt;=</span><span class="token number">10</span><span class="token punctuation">;</span>
 insert into t2 values<span class="token punctuation">(</span>null,<span class="token string">&#39;eee&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 12</span>
</code></pre></div><h2 id="注释-comment" tabindex="-1"><a class="header-anchor" href="#注释-comment" aria-hidden="true">#</a> 注释 comment</h2><ul><li>为表或列添加注释</li></ul><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 格式： create table t3(id int primary key auto_increment comment &#39;这是id啊&#39;,name varchar(10) comment &#39;名字&#39;);</span>
<span class="token comment"># 查看</span>
show create table t3<span class="token punctuation">;</span>
</code></pre></div><h2 id="的作用" tabindex="-1"><a class="header-anchor" href="#的作用" aria-hidden="true">#</a> \`的作用</h2><ul><li>用于修饰表名和字段名 可以省略 create table <code>t4</code>(<code>id</code> int,<code>name</code> varchar(10));</li></ul><h2 id="sql分类" tabindex="-1"><a class="header-anchor" href="#sql分类" aria-hidden="true">#</a> SQL分类</h2><h3 id="ddl-data-definition-language-数据定义语言" tabindex="-1"><a class="header-anchor" href="#ddl-data-definition-language-数据定义语言" aria-hidden="true">#</a> DDL Data Definition Language 数据定义语言</h3><ul><li>truncate：删除表并创建新表 自增数值清零</li><li>truncate table 表名;</li><li>包括： create 、 alter 、 drop 、 truncate</li></ul><blockquote><p>不支持事务</p></blockquote><h3 id="dml-data-manipulation-language-数据操作语言" tabindex="-1"><a class="header-anchor" href="#dml-data-manipulation-language-数据操作语言" aria-hidden="true">#</a> DML Data Manipulation Language 数据操作语言</h3><ul><li>包括： insert 、 update 、 delete 、 select（DQL）</li></ul><blockquote><p>支持事务</p></blockquote><h3 id="dql-data-query-language-数据查询语言" tabindex="-1"><a class="header-anchor" href="#dql-data-query-language-数据查询语言" aria-hidden="true">#</a> DQL Data Query Language 数据查询语言</h3><ul><li>只包括select</li></ul><h3 id="tcl-transaction-control-language-事务控制语言" tabindex="-1"><a class="header-anchor" href="#tcl-transaction-control-language-事务控制语言" aria-hidden="true">#</a> TCL Transaction Control Language 事务控制语言</h3><ul><li>包括： begin 、 commit 、rollback、 savepoint xxx 、 rollback to xxx;</li></ul><h3 id="dcl-data-control-language-数据控制语言" tabindex="-1"><a class="header-anchor" href="#dcl-data-control-language-数据控制语言" aria-hidden="true">#</a> DCL Data Control Language 数据控制语言</h3><ul><li>分配用户权限相关的SQL</li></ul><h2 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h2><h3 id="整数" tabindex="-1"><a class="header-anchor" href="#整数" aria-hidden="true">#</a> 整数</h3><p>int(m) 和 bigint(m) ,m代表显示长度，不足m长度时补零，需要结合zerofill关键字使用</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>   <span class="token keyword">create</span> <span class="token keyword">table</span> t_int<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span>age <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> zerofill<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">insert</span> <span class="token keyword">into</span> t_int <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_int<span class="token punctuation">;</span>
</code></pre></div><h3 id="浮点数" tabindex="-1"><a class="header-anchor" href="#浮点数" aria-hidden="true">#</a> 浮点数</h3><p>double(m,d) m代表总长度 d代表小数长度, 超高精度浮点数decimal(m,d) 当涉及超高精度运算时使用。</p><blockquote><p>25.234 m=5 d=3</p></blockquote><h3 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串" aria-hidden="true">#</a> 字符串：</h3><ul><li>char(m) 固定长度,最大长度255 好处：执行效率高</li><li>varchar(m) 可变长度, 好处：节省资源， 最大长度65535 但是超高255建议使用text</li><li>text(m) 可变长度, 最大长度65535</li></ul><h3 id="日期" tabindex="-1"><a class="header-anchor" href="#日期" aria-hidden="true">#</a> 日期</h3><ul><li>date：只能保存年月日</li><li>time：只能保存时分秒</li><li>datetime：年月日时分秒 最大值：9999-12-31 ，默认值为null</li><li>timestamp：时间戳 年月日时分秒 最大值：2038-1-19 ，默认值为当前系统时间</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> t_date<span class="token punctuation">(</span>t1 <span class="token keyword">date</span><span class="token punctuation">,</span>t2 <span class="token keyword">time</span><span class="token punctuation">,</span>t3 <span class="token keyword">datetime</span><span class="token punctuation">,</span>t4 <span class="token keyword">timestamp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> t_date <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;2019-05-17&#39;</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> t_date <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;16:29:00&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2019-05-17 16:30:00&#39;</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="sql文件导入" tabindex="-1"><a class="header-anchor" href="#sql文件导入" aria-hidden="true">#</a> sql文件导入</h2><ol><li>windows系统</li></ol><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 把文件放到d盘根目录</span>
<span class="token builtin class-name">source</span> d:/tables.sql<span class="token punctuation">;</span>
</code></pre></div><ol start="2"><li>linux系统</li></ol><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 把文件放到桌面, 然后执行</span>
<span class="token builtin class-name">source</span> /home/tables.sql<span class="token punctuation">;</span>
</code></pre></div><h2 id="is-null-和-is-not-null" tabindex="-1"><a class="header-anchor" href="#is-null-和-is-not-null" aria-hidden="true">#</a> is null 和 is not null</h2><ol><li>查询没有领导的员工姓名和工资</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code> <span class="token keyword">select</span> ename<span class="token punctuation">,</span>sal <span class="token keyword">from</span> emp <span class="token keyword">where</span> mgr <span class="token operator">is</span> <span class="token boolean">null</span><span class="token punctuation">;</span>
</code></pre></div><ol start="2"><li>查询有奖金的员工姓名，工资，奖金</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> ename<span class="token punctuation">,</span>sal<span class="token punctuation">,</span>comm <span class="token keyword">from</span> emp <span class="token keyword">where</span> comm <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="别名" tabindex="-1"><a class="header-anchor" href="#别名" aria-hidden="true">#</a> 别名</h2><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> ename <span class="token keyword">from</span> emp<span class="token punctuation">;</span>
<span class="token keyword">select</span> ename <span class="token keyword">as</span> <span class="token string">&#39;姓名&#39;</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>
<span class="token keyword">select</span> ename <span class="token string">&#39;姓名&#39;</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>
<span class="token keyword">select</span> ename 姓名 <span class="token keyword">from</span> emp<span class="token punctuation">;</span>
</code></pre></div>`,48);function r(d,k){return s(),e("div",null,[c,i,t(" more "),u])}const m=n(p,[["render",r],["__file","1910011301.html.vue"]]);export{m as default};
