const e=JSON.parse('{"key":"v-0dc9bed3","path":"/note/java/concurrency/lock/2306021120.html","title":"ReentrantReadWriteLock（读写锁）","lang":"zh-CN","frontmatter":{"isOriginal":true,"date":"2023-06-02T00:00:00.000Z","order":3,"category":["并发"],"tag":["线程安全","Lock"]},"headers":[{"level":2,"title":"读写锁实现原理","slug":"读写锁实现原理","link":"#读写锁实现原理","children":[{"level":3,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":3,"title":"锁降级","slug":"锁降级","link":"#锁降级","children":[]},{"level":3,"title":"锁升级","slug":"锁升级","link":"#锁升级","children":[]},{"level":3,"title":"实现流程","slug":"实现流程","link":"#实现流程","children":[]}]},{"level":2,"title":"性能问题","slug":"性能问题","link":"#性能问题","children":[]},{"level":2,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]}],"git":{"createdTime":1686368450000,"updatedTime":1702956839000,"contributors":[{"name":"yanggl","email":"2549597630@qq.com","commits":2}]},"readingTime":{"minutes":7.32,"words":2195},"filePathRelative":"note/java/concurrency/lock/2306021120.md","localizedDate":"2023年6月2日","excerpt":"<h1> ReentrantReadWriteLock（读写锁）</h1>\\n<p>ReentrantReadWriteLock是一个读写锁，它内部维护了两个锁：<strong>ReadLock</strong>和<strong>WriteLock</strong>。ReadLock用于只读操作，WriteLock用于写操作。 如果没有写操作，读锁是可以被多个线程同时持有的，即写锁是独占的，读锁是共享的。</p>\\n","copyright":{"author":"Yaien","license":"MIT"}}');export{e as data};
