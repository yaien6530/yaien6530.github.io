const e=JSON.parse('{"key":"v-91f8f38c","path":"/note/java/jvm/2311081011.html","title":"JVM内存模型详解","lang":"zh-CN","frontmatter":{"isOriginal":true,"date":"2023-11-08T00:00:00.000Z","index":true,"category":["Java"],"tag":["JVM"]},"headers":[],"git":{"createdTime":1699437027000,"updatedTime":1699437027000,"contributors":[{"name":"yanggl","email":"2549597630@qq.com","commits":1}]},"readingTime":{"minutes":0.67,"words":201},"filePathRelative":"note/java/jvm/2311081011.md","localizedDate":"2023年11月8日","excerpt":"<h1> JVM内存模型详解</h1>\\n<p>JMM(Java Memory Model)是JVM的一种规范，定义了JVM的内存模型。它屏蔽了各种硬件和操作系统的访问差异，不像c那样直接访问硬件内存，相对安全很多，它的主要目的是解决由于多线程通过共享内存进行通信时，存在的本地内存数据不一致、编译器会对代码指令重排序、处理器会对代码乱序执行等带来的问题。可以保证并发编程场景中的原子性、可见性和有序性。</p>\\n<p>JVM内存布局规定了Java在运行过程中内存申请、分配、管理的策略，保证JVM的高效稳定运行。</p>\\n","copyright":{"author":"Yaien","license":"MIT"}}');export{e as data};
