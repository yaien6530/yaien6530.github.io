import{_ as n,X as s,Y as e,a0 as t,Z as a,$ as l,a2 as o}from"./framework-4115b8f2.js";const p={},i=a("p",null,"isOriginal: true date: 2023-05-07 index: true category:",-1),c=a("ul",null,[a("li",null,"数据库")],-1),d=a("p",null,"tag:",-1),u=a("ul",null,[a("li",null,"MySQL"),a("li",null,"基础")],-1),r=a("hr",null,null,-1),k=a("h1",{id:"mysql基础-五",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#mysql基础-五","aria-hidden":"true"},"#"),l(" MySQL基础（五）")],-1),h=a("p",null,"MySQL基础笔记系列",-1),m=o(`<h2 id="关联关系" tabindex="-1"><a class="header-anchor" href="#关联关系" aria-hidden="true">#</a> 关联关系</h2><p>外键：用于建立关系的字段称为外键</p><h3 id="一对一" tabindex="-1"><a class="header-anchor" href="#一对一" aria-hidden="true">#</a> 一对一</h3><ul><li>什么是一对一： 有AB两张表，A表中一条数据对应B表中的一条数据，同时B表中一条也对应A表中的一条</li></ul><ul><li>应用场景： 为了提高查询效率 把原有一张表的数据拆成两张表如：商品表和商品详情表 、 用户表和用户信息扩展表</li></ul><h3 id="一对多" tabindex="-1"><a class="header-anchor" href="#一对多" aria-hidden="true">#</a> 一对多</h3><ul><li>什么是一对多：有AB两张表，A表中一条数据对应B表多条数据，同时B表一条对应A表一条，称为一对多。</li><li>应用场景： 员工表和部门表 商品表和商品分类表 用户表和地址表</li><li>如何建立关系： 在多的表中添加外键指向另外一张表的主键</li></ul><h3 id="多对多" tabindex="-1"><a class="header-anchor" href="#多对多" aria-hidden="true">#</a> 多对多</h3><ul><li>什么是多对多： 有AB两张表，A表中一条数据对应B表中的多条数据，同时B表中一体数据对应A表中的多条。</li><li>应用场景： 用户表和权限表 老师表和学生表</li><li>如何建立关系： 创建关系表，在关系表中添加两个外键指向另外两个表的主键</li></ul><h2 id="视图-view" tabindex="-1"><a class="header-anchor" href="#视图-view" aria-hidden="true">#</a> 视图（view）</h2><ul><li>什么是视图：数据库中表和视图都是其内部的对象，视图本质其实是取代了一段SQL查询语句，视图没有自己独立的数据，数据来自于原表</li><li>视图的作用： 1. 重用SQL，提高开发效率 2. 隐藏敏感字段</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code> <span class="token keyword">create</span> <span class="token keyword">view</span> 视图名 <span class="token keyword">as</span> <span class="token punctuation">(</span>子查询<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="分类" tabindex="-1"><a class="header-anchor" href="#分类" aria-hidden="true">#</a> 分类</h3><ul><li>简单视图： 创建视图的子查询中不包含去重，分组，关联查询，聚合函数的视图称为简单视图，可以对视图中的数据进行增删改查操作</li><li>复杂视图： 和简单视图相反，只能对视图中的数据进行查询操作</li></ul><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3><ol><li>创建查询每个部门平均工资，最高工资，最低工资，工资总和，部门人数的视图</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">view</span> v_emp_info <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token keyword">select</span> deptno<span class="token punctuation">,</span><span class="token function">avg</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">max</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">min</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> emp <span class="token keyword">group</span> <span class="token keyword">by</span> deptno<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>创建一个10号部门的视图</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">view</span> v_emp_10 <span class="token keyword">as</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> deptno<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>创建一个没有工资的员工表视图</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">view</span> v_emp_nosal <span class="token keyword">as</span><span class="token punctuation">(</span><span class="token keyword">select</span> empno<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>deptno <span class="token keyword">from</span> emp<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,21);function v(_,w){return s(),e("div",null,[i,c,d,u,r,k,h,t(" more "),m])}const f=n(p,[["render",v],["__file","1910011304.html.vue"]]);export{f as default};
