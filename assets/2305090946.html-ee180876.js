import{_ as i,r as t,o,c as d,d as n,a as e,b as a,f as l,e as h}from"./app-25dff8a4.js";const s={},c=e("h1",{id:"idea-常用插件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#idea-常用插件","aria-hidden":"true"},"#"),a(" IDEA 常用插件")],-1),u=e("p",null,"IDEA 开发常用插件汇总，持续更新",-1),p=h('<h2 id="lombok" tabindex="-1"><a class="header-anchor" href="#lombok" aria-hidden="true">#</a> Lombok</h2><p>简介：自动get/set/toString等。</p><p>你只需要写好类属性，其他的交给Lombok</p><h3 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h3><blockquote><p>@Getter and @Setter @FieldNameConstants @ToString @EqualsAndHashCode @AllArgsConstructor, @RequiredArgsConstructor and<br> @NoArgsConstructor @Log, @Log4j, @Log4j2, @Slf4j, @XSlf4j, @CommonsLog, @JBossLog, @Flogger, @CustomLog @Data @Builder<br> @SuperBuilder @Singular @Delegate @Value @Accessors @Wither @With @SneakyThrows @val @var experimental @var<br> @UtilityClass</p></blockquote><p>使用方法：将上面的注解写到类上面即可</p><h2 id="google-java-format" tabindex="-1"><a class="header-anchor" href="#google-java-format" aria-hidden="true">#</a> google-java-format</h2><p>简介：google-java-format插件可以帮助我们不通过对应的快捷键就可以实现特定方式下自动格式化代码。</p><h2 id="translation" tabindex="-1"><a class="header-anchor" href="#translation" aria-hidden="true">#</a> Translation</h2><p>简介：翻译插件，支持google翻译、百度翻译、有道翻译。推荐使用谷歌翻译</p><h2 id="alibaba-java-coding-guidelines" tabindex="-1"><a class="header-anchor" href="#alibaba-java-coding-guidelines" aria-hidden="true">#</a> Alibaba Java Coding Guidelines</h2><p>简介：阿里巴巴代码规范检测。不符合代码规范的地方会有波浪线，鼠标移上去就会有相应的提示，有些问题甚至可以快速修复</p><h2 id="leetcode-editor" tabindex="-1"><a class="header-anchor" href="#leetcode-editor" aria-hidden="true">#</a> Leetcode Editor</h2><p>简介：LeetCode插件，可以在IDEA中在线刷题。上班摸鱼属实方便，表面上我在干活，实际上我在刷算法题。</p><p>也可前往 LeetCode 官网；</p><h2 id="jclasslib-bytecode-viewer" tabindex="-1"><a class="header-anchor" href="#jclasslib-bytecode-viewer" aria-hidden="true">#</a> Jclasslib Bytecode Viewer</h2><p>简介：看类的字节码文件</p><h2 id="camelcase" tabindex="-1"><a class="header-anchor" href="#camelcase" aria-hidden="true">#</a> CamelCase</h2><p>简介：在几种字符串格式之间来回切换。有一下几种格式：</p><ul><li>驼峰，第一个单词首字母小写，其他单词首字母大写</li><li>所有字母小写，单词间下划线分隔</li><li>所有字母小写，单词间空格分隔</li><li>所有字母小写，单词间短横线分隔</li><li>每个单词首字母全部大写</li><li>所有字母大写，单词间下划线分隔</li></ul><p>使用：按住Shift + Alt再不停的按U，会把选中内容的单词的下划线转驼峰转大写等，不停的转换，直到你想要的。</p><h2 id="free-mybatis-plugin" tabindex="-1"><a class="header-anchor" href="#free-mybatis-plugin" aria-hidden="true">#</a> Free Mybatis Plugin</h2><p>简介：可以通过mapper接口里的方法跳转到mapper.xml里。</p><h2 id="auto-filling-java-call-arguments" tabindex="-1"><a class="header-anchor" href="#auto-filling-java-call-arguments" aria-hidden="true">#</a> Auto filling Java call arguments</h2><p>简介：函数参数自动填充。已经编写好的函数，调用后需要填充参数，但是绝大多数情况下，传入的变量名称和该函数的参数名一致，当参数较多时，手动单个填充参数非常浪费时间。该插件就可以帮你解决这个问题。</p><h2 id="findbugs" tabindex="-1"><a class="header-anchor" href="#findbugs" aria-hidden="true">#</a> FindBugs</h2><p>简介：静态代码检查。可以检查你代码中的隐患，并给出原因。</p><h2 id="sequencediagram" tabindex="-1"><a class="header-anchor" href="#sequencediagram" aria-hidden="true">#</a> SequenceDiagram</h2><p>简介:根据调用链路生成时序图，对查看类调用及查看源码帮助很大；</p><h2 id="codota" tabindex="-1"><a class="header-anchor" href="#codota" aria-hidden="true">#</a> Codota</h2><p>简介：代码补全插件。争抢IDEA的代码提示功能，可以搜索第三方对该函数的使用方法</p><h2 id="maven-helper" tabindex="-1"><a class="header-anchor" href="#maven-helper" aria-hidden="true">#</a> Maven Helper</h2><p>简介：maven 依赖管理。</p><h2 id="jrebel" tabindex="-1"><a class="header-anchor" href="#jrebel" aria-hidden="true">#</a> JRebel</h2>',34),g={href:"https://www.jianshu.com/p/52e698c57131",target:"_blank",rel:"noopener noreferrer"};function b(m,f){const r=t("ExternalLinkIcon");return o(),d("div",null,[c,u,n(" more "),p,e("p",null,[a("简介：热部署插件 详情教程："),e("a",g,[a("https://www.jianshu.com/p/52e698c57131"),l(r)])])])}const _=i(s,[["render",b],["__file","2305090946.html.vue"]]);export{_ as default};
